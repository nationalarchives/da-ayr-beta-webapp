name: Run E2E Tests

on:
  pull_request:
  merge_group:

jobs:
  e2e_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Start Docker Compose with CI-specific configuration
      run: docker compose -f local_services/docker-compose.ci.yml up -d --wait

    - name: Set up E2E test environment
      run: | # pragma: allowlist secret
        cat > .env.e2e_tests << EOF
        AYR_AAU_USER_USERNAME=testuser
        AYR_AAU_USER_PASSWORD=password123
        AYR_STANDARD_USER_USERNAME=testuser
        AYR_STANDARD_USER_PASSWORD=password123
        KEYCLOAK_BASE_URI=http://127.0.0.1:8080
        KEYCLOAK_CLIENT_ID=ayr-beta
        KEYCLOAK_REALM_NAME=tdr
        KEYCLOAK_CLIENT_SECRET=test-client-secret
        EOF

    - name: Build E2E Docker image
      run: docker build -t e2e_tests e2e_tests/

    - name: Run E2E tests with Docker
      run: |
        docker run --rm --env-file .env.e2e_tests --network=host \
          -v "$(pwd)/e2e_tests":/e2e_tests e2e_tests

    - name: Upload test results
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: playwright-report
        path: e2e_tests/playwright-report/
        retention-days: 7

    - name: Upload visual snapshots
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: visual-regression-snapshots
        path: e2e_tests/snapshots/
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: e2e-test-results
        path: e2e_tests/test-results/
        retention-days: 7
    - name: Check logs after test failure
      if: failure()
      run: |
          echo "=== Webapp logs ==="
          cd local_services
          docker compose -f docker-compose.ci.yml logs webapp
          echo "=== Database logs ==="
          docker compose -f docker-compose.ci.yml logs webapp_postgres
          echo "=== OpenSearch logs ==="
          docker compose -f docker-compose.ci.yml logs opensearch-node1
          echo "=== MinIO logs ==="
          docker compose -f docker-compose.ci.yml logs minio

    - name: Stop services
      if: always()
      run: |
        cd local_services
        docker compose -f docker-compose.ci.yml down -v
        docker system prune -f
