---
services:
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - OPENSEARCH_SSL_CERTIFICATE=/usr/share/opensearch/config/opensearch-node1.crt
      - OPENSEARCH_SSL_KEY=/usr/share/opensearch/config/opensearch-node1.key
      - OPENSEARCH_SSL_ROOT_CERT=/usr/share/opensearch/config/root-ca.pem
      - OPENSEARCH_SSL_ENABLED=true
      - path.repo=/mnt/snapshots
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
      - ./opensearch_certs/opensearch-node1.crt:/usr/share/opensearch/config/opensearch-node1.crt
      - ./opensearch_certs/opensearch-node1.key:/usr/share/opensearch/config/opensearch-node1.key
      - ./opensearch_certs/root-ca.pem:/usr/share/opensearch/config/root-ca.pem
      - ./snapshots:/mnt/snapshots
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - opensearch-net

  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - OPENSEARCH_SSL_CERTIFICATE=/usr/share/opensearch/config/opensearch-node2.crt
      - OPENSEARCH_SSL_KEY=/usr/share/opensearch/config/opensearch-node2.key
      - OPENSEARCH_SSL_ROOT_CERT=/usr/share/opensearch/config/root-ca.pem
      - OPENSEARCH_SSL_ENABLED=true
      - path.repo=/mnt/snapshots
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
      - ./opensearch_certs/opensearch-node1.crt:/usr/share/opensearch/config/opensearch-node1.crt
      - ./opensearch_certs/opensearch-node1.key:/usr/share/opensearch/config/opensearch-node1.key
      - ./opensearch_certs/root-ca.pem:/usr/share/opensearch/config/root-ca.pem
      - ./snapshots:/mnt/snapshots
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]'
    networks:
      - opensearch-net
  postgres:
    image: postgres:17.6
    volumes:
      - kc_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${KC_POSTGRES_PORT}:5432
    networks:
      - keycloak_network

  webapp_postgres:
    image: postgres:17.6
    volumes:
      - webapp_postgres_data:/var/lib/postgresql/data
      - ./dev-data.sql:/docker-entrypoint-initdb.d/dev-data.sql
      - ./webapp_postgres_certs/postgres_localhost.crt:/var/lib/postgresql/postgres_localhost.crt
      - ./webapp_postgres_certs/postgres_localhost.key:/var/lib/postgresql/postgres_localhost.key
      - ./webapp_postgres_certs/root-ca.pem:/var/lib/postgresql/root-ca.pem
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${WEBAPP_POSTGRES_PORT}:5432
    command: [
      "bash", "-c",
      "chown postgres:postgres /var/lib/postgresql/postgres_localhost.key && exec postgres -c ssl=on -c ssl_cert_file=/var/lib/postgresql/postgres_localhost.crt -c ssl_key_file=/var/lib/postgresql/postgres_localhost.key -c ssl_ca_file=/var/lib/postgresql/root-ca.pem"
    ]


  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_SSL_REQUIRED: none
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./import:/opt/keycloak/data/import
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ~/minio/data:/data
      - ./minio_certs/root-ca.crt:/root/.minio/certs/CAs/my-ca.crt
      - ./minio_certs/minio.key:/root/.minio/certs/private.key
      - ./minio_certs/minio.crt:/root/.minio/certs/public.crt
    command: server /data --console-address ":9001"

  webapp:
    env_file:
      - .docker.env
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: webapp
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      - CONFIG_SOURCE=ENVIRONMENT_VARIABLES
      - DB_HOST=webapp_postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_SSL_ROOT_CERTIFICATE=/app/local_services/webapp_postgres_certs/root-ca.pem
      - SQLALCHEMY_SSL_MODE=disable
      - KEYCLOAK_BASE_URI=http://keycloak:8080
      - KEYCLOAK_CLIENT_ID=ayr-beta
      - KEYCLOAK_REALM_NAME=tdr
      - KEYCLOAK_CLIENT_SECRET=test-client-secret
      - AWS_ENDPOINT_URL=https://127.0.0.1:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_REGION=eu-west-2
      - SECRET_KEY=test-secret-key
      - DEFAULT_PAGE_SIZE=10
      - DEFAULT_DATE_FORMAT=DD/MM/YYYY
      - RECORD_BUCKET_NAME=test-record-download
      - FLASKS3_ACTIVE=False
      - FLASKS3_CDN_DOMAIN=localhost
      - FLASKS3_BUCKET_NAME=test-record-download
      - PERF_TEST=False
      - OPEN_SEARCH_HOST=https://opensearch-node1:9200
      - OPEN_SEARCH_USERNAME=admin
      - OPEN_SEARCH_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - OPEN_SEARCH_CA_CERTS=/app/local_services/opensearch_certs/root-ca.pem
      - OPEN_SEARCH_TIMEOUT=10
    depends_on:
      - webapp_postgres
      - keycloak
      - minio
      - opensearch-node1
    networks:
      - default
      - keycloak_network
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:
  kc_postgres_data:
    driver: local
  webapp_postgres_data:
    driver: local

networks:
  opensearch-net:
  keycloak_network:
    driver: bridge
