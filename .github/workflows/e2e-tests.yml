name: Run E2E Tests

on:
  pull_request:
  merge_group:

jobs:
  e2e_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
      with:
        python-version: 3.11

    - name: Install Poetry
      run: pip install poetry

    - name: Create certificate directories and generate certs
      run: |
        cd local_services
        # Only create directories for services that actually need certificates
        mkdir -p opensearch_certs minio_certs

        # Genrerate minio certificates
        cd minio_certs
        chmod +x generate_minio_certs.sh
        ./generate_minio_certs.sh

        # genrerate opensearch certificates
        cd ../opensearch_certs
        chmod +x generate_opensearch_certs.sh
        ./generate_opensearch_certs.sh

        # Genrerate webapp postgres certificates
        cd ../webapp_postgres_certs
        chmod +x generate_webapp_postgres_certs.sh
        ./generate_webapp_postgres_certs.sh

    - name: Set up environment variables
      run: | # pragma: allowlist secret
        cd local_services
        cat > .docker.env << EOF
        CONFIG_SOURCE=ENVIRONMENT_VARIABLES
        PYTHONUNBUFFERED=1
        FLASK_ENV=development
        DB_HOST=webapp_postgres
        DB_PORT=5432
        DB_NAME=local_db
        DB_USER=local_db_user
        DB_PASSWORD=local_db_user_password
        DB_SSL_ROOT_CERTIFICATE=/app/local_services/webapp_postgres_certs/root-ca.pem
        SQLALCHEMY_SSL_MODE=disable
        KEYCLOAK_BASE_URI=http://keycloak:8080
        KEYCLOAK_CLIENT_ID=ayr-beta
        KEYCLOAK_REALM_NAME=tdr
        KEYCLOAK_CLIENT_SECRET=test-client-secret
        AWS_ENDPOINT_URL=https://minio:9000
        AWS_ACCESS_KEY_ID=ROOTNAME
        AWS_SECRET_ACCESS_KEY=CHANGEME123
        AWS_REGION=eu-west-2
        SECRET_KEY=test-secret-key
        DEFAULT_PAGE_SIZE=10
        DEFAULT_DATE_FORMAT=DD/MM/YYYY
        RECORD_BUCKET_NAME=test-record-download
        FLASKS3_ACTIVE=False
        FLASKS3_CDN_DOMAIN=localhost
        FLASKS3_BUCKET_NAME=test-record-download
        PERF_TEST=False
        OPEN_SEARCH_HOST=https://opensearch-node1:9200
        OPEN_SEARCH_USERNAME=admin
        OPEN_SEARCH_PASSWORD=FOOBARCARabc123!
        OPEN_SEARCH_CA_CERTS=/app/local_services/opensearch_certs/root-ca.pem
        OPEN_SEARCH_TIMEOUT=10
        EOF

    - name: Start services
      run: |
        cd local_services

        # Start Docker Compose
        docker compose -f docker-compose.yml up -d
      env:
        CONFIG_SOURCE: ENVIRONMENT_VARIABLES
        OPENSEARCH_INITIAL_ADMIN_PASSWORD: FOOBARCARabc123! # pragma: allowlist secret
        POSTGRES_USER: local_db_user
        POSTGRES_PASSWORD: local_db_user_password # pragma: allowlist secret
        POSTGRES_DB: local_db
        KC_POSTGRES_PORT: 5432
        WEBAPP_POSTGRES_PORT: 5433
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: password # pragma: allowlist secret
        MINIO_ROOT_USER: ROOTNAME
        MINIO_ROOT_PASSWORD: CHANGEME123 # pragma: allowlist secret

    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start"
        sleep 90

        # Check Docker services status
        cd local_services
        echo "All services in docker-compose.yml:"
        docker compose config --services
        echo "Running services:"
        docker compose ps
        echo "All containers (including stopped):"
        docker compose ps -a

        # Check logs for failed services
        echo "webapp_postgres logs:"
        docker logs local_services-webapp_postgres-1 --tail 20

        echo "opensearch-node1 logs:"
        docker logs opensearch-node1 --tail 20

        echo "Webapp logs:"
        docker logs webapp --tail 20

        # Wait for postgres to be ready for connections
        echo "Waiting for postgres to be ready..."
        timeout 120 bash -c 'until docker exec local_services-webapp_postgres-1 pg_isready -h localhost -p 5432; do sleep 2; done'

        # Test postgres connectivity
        echo "Testing postgres connectivity..."
        timeout 60 bash -c 'until docker exec webapp python -c "import psycopg2; psycopg2.connect(host=\"webapp_postgres\", port=5432, user=\"local_db_user\", password=\"local_db_user_password\", dbname=\"local_db\")" 2>/dev/null; do echo "Waiting for postgres..."; sleep 5; done'
        echo "PostgreSQL connection successful"

        echo "Final service status check:"
        docker compose ps

        echo "Checking webapp logs:"
        docker logs webapp --tail 20

        echo "Checking postgres logs:"
        docker logs local_services-webapp_postgres-1 --tail 20

        timeout 120 bash -c 'until curl -k -f https://127.0.0.1:8000 || curl -f http://127.0.0.1:8000; do sleep 2; done'

        # Wait for keycloak realm to be ready
        timeout 120 bash -c 'until curl -f http://127.0.0.1:8080/realms/tdr/.well-known/openid-configuration; do sleep 2; done'
      env:
        CONFIG_SOURCE: ENVIRONMENT_VARIABLES
        OPENSEARCH_INITIAL_ADMIN_PASSWORD: FOOBARCARabc123! # pragma: allowlist secret
        POSTGRES_USER: local_db_user
        POSTGRES_PASSWORD: local_db_user_password # pragma: allowlist secret
        POSTGRES_DB: local_db
        KC_POSTGRES_PORT: 5432
        WEBAPP_POSTGRES_PORT: 5433
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: password # pragma: allowlist secret
        MINIO_ROOT_USER: ROOTNAME
        MINIO_ROOT_PASSWORD: CHANGEME123 # pragma: allowlist secret



    - name: Install E2E test dependencies
      run: |
        cd e2e_tests
        poetry lock
        poetry install --no-root
        poetry run playwright install --with-deps chromium

    - name: Run E2E tests
      run: |
        cd e2e_tests
        poetry run python -m pytest . -v --browser=chromium --base-url=https://127.0.0.1:8000
      env:
        WEBAPP_URL: https://127.0.0.1:8000
        KEYCLOAK_BASE_URI: http://127.0.0.1:8080
        KEYCLOAK_REALM_NAME: tdr
        KEYCLOAK_CLIENT_ID: ayr-beta
        KEYCLOAK_CLIENT_SECRET: test-client-secret # pragma: allowlist secret
        KEYCLOAK_ADMIN_USER: admin
        KEYCLOAK_ADMIN_PASSWORD: password # pragma: allowlist secret

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: e2e_tests/playwright-report/
        retention-days: 7

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots
        path: e2e_tests/test-results/
        retention-days: 7

    - name: Stop services
      if: always()
      run: |
        cd local_services
        docker compose -f docker-compose.yml down -v
        docker system prune -f
